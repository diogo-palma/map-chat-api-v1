version: '3'

services:
  app:
    container_name: app-v1
    restart: "no"
    logging:
      driver: "json-file"
      options:
        max-size: "10m" 
    build: 
      context: .
      dockerfile: Dockerfile  
    depends_on:
      - kafka 
    ports:
      - 3000:3000
    volumes:
      - .:/home/node/app
    networks: 
      - mynetwork
    environment:
      - TZ=America/Sao_Paulo

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    hostname: zookeeper
    networks: 
      - mynetwork
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m" 
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-server:7.3.0
    hostname: kafka
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m" 
    networks: 
      - mynetwork
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9094:9094"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092,OUTSIDE://host.docker.internal:9094
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      CONFLUENT_METRICS_ENABLE: 'false'
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'

  control-center:
    image: confluentinc/cp-enterprise-control-center:7.3.0
    hostname: control-center
    container_name: control-center
    logging:
      driver: "json-file"
      options:
        max-size: "10m" 
    restart: always
    networks: 
      - mynetwork
    depends_on:
      - kafka
    ports:
      - "9021:9021"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: 'kafka:29092'
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONFLUENT_METRICS_TOPIC_REPLICATION: 1
      PORT: 9021

  postgres:
    container_name: postgres
    logging:
      driver: "json-file"
      options:
        max-size: "10m" 
    image: postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: postgres
      PGDATA: /var/lib/postgresql/data/
    volumes:
      - ./.docker/pg:/docker-entrypoint-initdb.d
      # - ./pg_data:/var/lib/postgresql/data/:rw
    networks:
      - mynetwork   

  mongo:
    container_name: mongo
    logging:
      driver: "json-file"
      options:
        max-size: "10m" 
    image: mongo:4.4.6
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    networks:
      - mynetwork 
      
  redis:
    image: 'redis:latest'
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m" 
    ports:
      - '6379:6379'

networks:
  mynetwork:
    name: mynetwork
    driver: bridge